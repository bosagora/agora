language: d

dist: xenial

d:
  - dmd-2.087.1 # 2.087.0 has regressions
  - dmd-2.086.1
  - ldc-1.16.0     # Older version don't work
  - dmd-nightly   # Nightlies at the end so that `fast_finish` is useful
  - ldc-latest-ci # The freshest LDC

os:
  - linux
  - osx

matrix:
  allow_failures:
    - d: dmd-nightly
    - d: ldc-latest-ci
  fast_finish: true
  include:
    - d: dmd
      services: docker
      script:   docker run -it $(docker build -q .) --help

# `brew install` is the slowest thing ever on OSX
# It takes at least 6 minutes to run
# Note: The cache should be cleaned up from time to time,
# as older packages will persist, but given the frequency
# of release this is not an immediate concern
cache:
  directories:
    - $HOME/Dependencies/

# We need a fairly recent compiler for SCP
# Namely one with N4387 fixed
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libsodium-dev
      - g++-9
      - libsqlite3-dev

env:
  - PATH=$HOME/bin/:$PATH PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"

# A note about OSX:
# Homebrew uses a massive git repository, that gets updated very frequently.
# This leads to homebrew taking forever to update its package definition on
# every single CI run.
# It also means a new release of libsodium could potentially break our build.
# As a result, instead of relying on the Homebrew-provided formula,
# the bottle used had been extracted, and is force-fed to brew.
before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then mkdir -p $HOME/Dependencies/; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then wget -P $HOME/Dependencies/ https://homebrew.bintray.com/bottles/libsodium-1.0.18.high_sierra.bottle.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then tar -C /usr/local/Cellar/ -xf $HOME/Dependencies/libsodium-1.0.18.high_sierra.bottle.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then brew link libsodium; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then mkdir -p $HOME/bin/; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ln -s `which gcc-9` $HOME/bin/gcc; fi # /usr/bin/gcc-9
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ln -s `which g++-9` $HOME/bin/g++; fi # /usr/bin/g++-9

script:
  - dub test -b unittest-cov --skip-registry=all --compiler=${DC}
  - rdmd --compiler=${DC} ./tests/runner.d --compiler=${DC} -cov
  - dub build --skip-registry=all --compiler=${DC}

after_success:
 - bash <(curl -s https://codecov.io/bash) -cF unittests
