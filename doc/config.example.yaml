################################################################################
## This is a sample, documented configuration file for Agora in YAML format
##
## It is not intended for usage on any network
##
## A node has two interfaces: one for network communication,
## and one for administration.
## The one communicating with the network is public,
## while the administrative is unsecured, disabled by default,
## and should not be exposed to the outside world.
## The administrative one is unsecured and should not be exposed to the outside
## world. It is disabled by default for security purpose.
################################################################################

################################################################################
##                             Network interface                              ##
################################################################################
node:
  # Minimum number of non-validating nodes to connect to before discovery is
  # considered complete
  min_listeners: 2
  # Maximum number of non-validating nodes to connect to
  max_listeners: 10
  # Address to which we bind
  address: 0.0.0.0 # Any node can bind - default value
  # Port on which we bind
  port:    2826    # 0xB0A, default value
  # Number of milliseconds to wait between retrying requests
  retry_delay: 5000
  # Maximum number of retries to issue before a request is considered failed
  max_retries: 5
  # Timeout for each request in milliseconds
  timeout: 2500
  # Path to the data directory (if the path doesn't exist it will be created)
  data_dir: .cache
  # The local address where the stats server (currently Prometheus)
  # is going to connect to, for example: http://0.0.0.0:8008
  # It can also be set to -1 do disable listening (default is -1)
  stats_listening_port: 9110

################################################################################
##                             Validator configuration                        ##
## The server can operate in two modes: full node and validator node.         ##
## The full node does not participate in consensus,                           ##
## it only replicates the state of the blockchain.                            ##
################################################################################
validator:
  # Whether or not we should act as a validator
  # When validating, the `seed` of an eligible account is required
  # An eligible account has at least 40k coins frozen in it
  enabled: true
  # This is a randomly generated keypair
  # If this node is not a validator, this will be ignored
  #
  # DO NOT USE THOSE VALUES ANYWHERE
  # Private seed:    SCT4KKJNYLTQO4TVDPVJQZEONTVVW66YLRWAINWI3FZDY7U4JS4JJEI4
  # Public address:  GCOQEOHAUFYUAC6G22FJ3GZRNLGVCCLESEJ2AXBIJ5BJNUVTAERPLRIJ
  seed:    SCT4KKJNYLTQO4TVDPVJQZEONTVVW66YLRWAINWI3FZDY7U4JS4JJEI4
  # Address of the name registry
  registry_address: http://127.0.0.1:3003
  # Network addresses that will be registered with the public key (Validator only)
  # If left empty, all public network addresses of the node will be registered
  addresses_to_register:
    - 88.88.88.88
    - best.validator.io
  # Whether or not the Validator will enroll automatically at the startup or
  # at the end of Validator cycle
  recurring_enrollment: true

################################################################################
##                         Ban manager configuration                          ##
################################################################################
banman:
  # max failed requests until an address is banned
  max_failed_requests: 10
  # the default duration of a ban
  ban_duration: 86400

################################################################################
##                          Administrative interface                          ##
################################################################################
admin:
  enabled: true      # `false` by default
  address: 127.0.0.1 # Private
  port:    2827      # 0xB0B

################################################################################
##                               Node discovery                               ##
##                                                                            ##
## When the network first starts, we need to connect to some peers to learn   ##
## the topology and find a safe intersection to listen to, and, if we are     ##
## a validator, to insert ourselves.                                          ##
################################################################################
network:
  # Supported value: IPv4, IPv6
  - http://192.168.1.42:2828
  - http://192.168.0.44:2828
dns:
  # Supported value: FQDN seed
  - seed.bosagora.io

################################################################################
##                               Logging options                              ##
################################################################################
logging:
  # Values: Trace, Info, Warn, Error, Fatal, None (default)
  level: None

################################################################################
##                               Event Handlers                               ##
################################################################################
event_handlers:
  # URLs to push a data when a block is externalized. (path is "/block_externalized")
  block_externalized:
    - http://127.0.0.1:3836/block_externalized
  # URLs to push a data when a pre-image is updated. (path is "/preimage_received")
  preimage_received:
    - http://127.0.0.1:3836/preimage_received
  # URLs to push a data when a transaction is updated. (path is "/transaction_received")
  transaction_received:
    - http://127.0.0.1:3836/transaction_received
